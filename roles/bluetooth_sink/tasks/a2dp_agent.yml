---

- name: Exit play if os_family is not Debian
  ansible.builtin.fail:
    msg: "ERROR: os_family of host {{ inventory_hostname }} is not Debian"
  when: ansible_facts['os_family'] != "Debian"

- name: Install python2 a2dp-agent dependencies
  ansible.builtin.apt:
    name:
      - python2
      - python-dbus
      # bluealsa/bluez-alsa handled in bluealsa task
    state: latest
    update_cache: yes
  when: ansible_facts['python']['version']['major'] == 2

- name: Install python3 a2dp-agent dependencies
  ansible.builtin.apt:
    name:
      - python3
      - python3-gi
      - python3-dbus
      # bluealsa/bluez-alsa handled in bluealsa task
    state: latest
    update_cache: yes
  when: ansible_facts['python']['version']['major'] == 3

- name: Copy a2dp-agent.py python2 script
  ansible.builtin.copy:
    src: files/usr/local/bin/a2dp-agent.py2
    dest: /usr/local/bin/a2dp-agent.py
    backup: yes
  when: ansible_facts['python']['version']['major'] == 2

- name: Copy a2dp-agent.py python3 script
  ansible.builtin.copy:
    src: files/usr/local/bin/a2dp-agent.py3
    dest: /usr/local/bin/a2dp-agent.py
    backup: yes
  when: ansible_facts['python']['version']['major'] == 3

- name: Make a2dp-agent.py executable
  ansible.builtin.file:
    dest: /usr/local/bin/a2dp-agent.py
    mode: +x
  when: 0 == 1

- name: Copy a2dp-agent systemd service file
  ansible.builtin.template:
    src: templates/etc/systemd/system/a2dp-agent.service.j2
    dest: /etc/systemd/system/a2dp-agent.service
    backup: yes
  notify: Restart a2dp-agent

- name: Start and enable a2dp-agent.service
  ansible.builtin.systemd:
    name: "a2dp-agent.service"
    enabled: yes
    daemon_reload: yes
    state: started
  ignore_errors: "{{ ansible_check_mode }}"
