---

- name: Exit play if os_family is not Debian
  ansible.builtin.fail:
    msg: "ERROR: os_family of host {{ inventory_hostname }} is not Debian"
  when: ansible_facts['os_family'] != "Debian"

- name: Copy acable script
  ansible.builtin.copy:
    src: files/usr/local/bin/acable.sh
    dest: /usr/local/bin/acable.sh
    backup: yes
  notify: Restart acables

- name: Make acable script executable
  ansible.builtin.file:
    dest: /usr/local/bin/acable.sh
    mode: +x

- name: Create acable.conf.d directory
  ansible.builtin.file:
    path: /etc/acable.conf.d
    state: directory
    mode: 0755

- name: Create acable config files
  ansible.builtin.template:
    src: templates/etc/acable.conf.d/acable.conf.j2
    dest: "/etc/acable.conf.d/{{ item.name }}.conf"
    backup: no
  notify: Restart acables
  loop: "{{ acable_config }}"

- name: Copy acable@ systemd service file
  ansible.builtin.template:
    src: templates/etc/systemd/system/acable@.service.j2
    dest: /etc/systemd/system/acable@.service
    backup: no
  notify: Restart acables

- name: Start and enable acable@ services
  ansible.builtin.systemd:
    name: "acable@{{ item.name }}.service"
    enabled: yes
    daemon_reload: yes
    state: started
  loop: "{{ acable_config }}"
  loop_control:
    label: "{{ item.name }}"
  ignore_errors: "{{ ansible_check_mode }}"
