---

- name: Exit play if os_family is not Debian
  ansible.builtin.fail:
    msg: "ERROR: os_family of host {{ inventory_hostname }} is not Debian"
  when: ansible_facts['os_family'] != "Debian"

- name: Rename WLAN interface to ap0
  ansible.builtin.copy:
    src: files/etc/systemd/network/00-onboard.link
    dest: /etc/systemd/network/00-onboard.link
    backup: no

- name: Create systemd override directory for dhcpcd
  ansible.builtin.file:
    path: /etc/systemd/system/dhcpcd.service.d
    state: directory
    mode: '0755'
    
- name: dhcpcd must ignore ap0 so that hostapd can take control
  ansible.builtin.copy:
    src: files/etc/systemd/system/dhcpcd.service.d/zzoverride.conf
    dest: /etc/systemd/system/dhcpcd.service.d/zzoverride.conf
  notify: Restart dhcpcd

# Use /etc/network/interfaces.d (dhcpcd ignores ap0)
- name: Set static IPs for ap0
  ansible.builtin.template:
    src: templates/etc/network/interfaces.d/accesspoint.j2
    dest: /etc/network/interfaces.d/accesspoint
  notify:
    - Restart ap0
    - Restart hostapd
    - Restart dnsmasq

- name: Use dnsmasq as dhcp / dns server
  ansible.builtin.apt:
    name: dnsmasq
    state: latest
    update_cache: yes

- name: Configure dnsmasq to serve wlan network
  ansible.builtin.blockinfile: 
    path: /etc/dnsmasq.conf
    block: |
      dhcp-range={{ accesspoint_dhcp_range_v4 }},12h
      dhcp-range={{ accesspoint_ap0_v6_ula_net_48 }}{{ accesspoint_ap0_v6_local_64 }}::1:1,{{ accesspoint_ap0_v6_ula_net_48 }}{{ accesspoint_ap0_v6_local_64 }}::ffff:fffe,ra-names,64,24h
  notify: Restart dnsmasq

- name: Reboot when ap0 not known yet
  ansible.builtin.reboot:
    msg: "ap0 is not defined, reboot"
  when: ansible_facts['ap0'] is not defined

- name: ap0 must be defined after reboot
  ansible.builtin.fail:
    msg: "ap0 not found after reboot, cannot continue"
  when: ansible_facts['ap0'] is not defined

- name: ap0
  ansible.builtin.debug:
    msg: "ap0 has IP {{ ansible_facts['ap0']['ipv4']['address'] }}/{{ ansible_facts['ap0']['ipv4']['netmask'] }}"

- name: WLAN config
  ansible.builtin.debug:
    msg: "channel={{ accesspoint_channel | default ('?') }}, ieee80211d={{ accesspoint_ieee80211d | default ('?') }}, country_code={{ accesspoint_country_code | default ('?') }}, SSID={{ accesspoint_ssid | default ('?') }}, passphrase={{ accesspoint_wpa_passphrase | default ('?') }}"

- name: Abort when passphrase unset or empty string
  ansible.builtin.fail: 
    msg: "Aborting, passphrase unset or empty string"
  when: accesspoint_wpa_passphrase is not defined or accesspoint_wpa_passphrase | default ('?') == ""

- name: Install hostapd 
  ansible.builtin.apt:
    name: hostapd
    state: latest
    update_cache: no

- name: Configure hostapd
  ansible.builtin.template:
    src: templates/etc/hostapd/hostapd.conf.j2
    dest: /etc/hostapd/hostapd.conf
  notify: Restart hostapd

- name: Start and enable hostapd
  ansible.builtin.systemd:
    name: "hostapd.service"
    enabled: yes
    masked: no
    daemon_reload: yes
    state: started
